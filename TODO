THIS BRANCH

* batch updates (no hair trigger).
* no couchdb polling.

Specifically, an update notification will activate an IndexWriterThread. That writer will;

* receive future update notifications and catch up every time.
* commit and exit if N seconds pass without an update (default N=10).
* commit every N seconds or U updates if updates continue (default N=60 and U=1000).

That is, under steady ingestion, we will commit every N seconds or U updates (whichever happens *first*) but, on sporadic ingestion, we'll commit a change within 10 seconds. 

This way, we do not need to poll couchdb at all. Additionally, only reindex if we see an update to our design document in the processing of _all_docs_by_seq.


Search Performance

* sort cache can take too long to build, respond with keep-alive messages.
* add an _optimize option.
* distributed scoring.

Index Performance


Misc

* hit highlighting (lucene contrib).
* clustering (carrot2).
* distributed search.
* JSONQuery? (http://docs.persvr.org/documentation/jsonquery)
* geospatial (need TrieRangeQuery from 2.9)
